{
  "keyboard_shortcut": "Alt+R", 
  "name": "1.4 run remote file ", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "/**", 
    " * Run this macro to execute a on-c-e model on the remote server.", 
    " *", 
    " * @source https://github.com/Komodo/macros", 
    " * @author R Holland", 
    " * @contributor Todd Whiteman, arey Hoffman, Sergey Kislyakov", 
    " * @version 0.5", 
    " */", 
    "", 
    "komodo.assertMacroVersion(3);", 
    "if (komodo.view) { komodo.view.setFocus(); }", 
    "var kocalc = ko.views.manager.currentView.koDoc.file;", 
    "var kocalcfile = kocalc.baseName;", 
    "var kocalcdir = kocalc.dirName;", 
    "", 
    "function getRemoteSSHConnection() {", 
    "    var remoteConnectionSvc = Components.classes[\"@activestate.com/koRemoteConnectionService;1\"].", 
    "            getService(Components.interfaces.koIRemoteConnectionService);", 
    "    // Use the current file's URI.", 
    "    var view = ko.views.manager.currentView;", 
    "    var uri = view.document && view.document.file.URI || view.koDoc.file.URI; // Support K7 koDoc", 
    "    if (uri.substr(0, 1) != \"s\") {", 
    "        throw Error(\"The current file is not a remote SSH file. Open a remote file first.\");}", 
    "    var conn = remoteConnectionSvc.getConnectionUsingUri(uri);", 
    "    if (conn) {", 
    "        // Ensure it's an SSH connection", 
    "        conn.QueryInterface(Components.interfaces.koISSHConnection);}", 
    "    else", 
    "    {throw Error(\"Not an SSH connection.  Please open the file through SSH.\");}", 
    "    return conn", 
    "}", 
    "", 
    "print_to_output_tab = function(str) {", 
    "    try {", 
    "        // Uncomment to allow for prompting of input text", 
    "        //if (!str) {", 
    "        //    str  = prompt(\"What text do you want to input?\");", 
    "        //}", 
    "        // Make sure the command output window is visible", 
    "        ko.run.output.show(window, false);", 
    "        // Retrieve the run output widget document element", 
    "        var runWidgetDoc = ko.widgets.getWidget(\"runoutput-desc-tabpanel\").contentDocument;", 
    "        // Make sure we're showing the output pane, not the error list pane.", 
    "        var deckWidget = runWidgetDoc.getElementById(\"runoutput-deck\");", 
    "        if (deckWidget.getAttribute(\"selectedIndex\") != 0) {", 
    "            ko.run.output.toggleView();", 
    "        }", 
    "        // Now find out which newline sequence the window uses, and write the", 
    "        // text to it.", 
    "        var scimoz = runWidgetDoc.getElementById(\"runoutput-scintilla\").scimoz;", 
    "        var prevLength = scimoz.length;", 
    "        var currNL = [\"\\r\\n\", \"\\n\", \"\\r\"][scimoz.eOLMode];", 
    "        var full_str = str + currNL;", 
    "        var full_str_byte_length = ko.stringutils.bytelength(full_str);", 
    "        var ro = scimoz.readOnly;", 
    "        try {", 
    "            scimoz.readOnly = false;", 
    "            scimoz.appendText(full_str_byte_length, full_str);", 
    "        } finally {", 
    "            scimoz.readOnly = ro;", 
    "        }", 
    "        // Bring the new text into view.", 
    "        scimoz.gotoPos(prevLength + 1);", 
    "    } catch(ex) {", 
    "        alert(\"problems printing [\" + str + \"]:\" + ex + \"\\n\");", 
    "    }", 
    "};", 
    "", 
    "var conn = getRemoteSSHConnection();", 
    "var stdout = {};", 
    "var stderr = {};", 
    "", 
    "// command line", 
    "var cmd1 = \"source .bash_profile; python2.7 -m oncepy \" + kocalcdir + \"/\" + kocalcfile;", 
    "alert(\"Run Remote Command: \" + cmd1);", 
    "", 
    "var cmd2 = \"pwd\";", 
    "var retval = conn.runCommand(cmd2, false, stdout, stderr);", 
    "print_to_output_tab(\"pwd on remote server: \" + stdout.value);", 
    "", 
    "var retval = conn.runCommand(cmd1, false, stdout, stderr);", 
    "print_to_output_tab(stdout.value);"
  ], 
  "version": "1.1.5", 
  "rank": 100, 
  "trigger_enabled": false, 
  "async": false, 
  "type": "macro", 
  "icon": "koicon://ko-svg/chrome/icomoon/skin/circle-small.svg"
}